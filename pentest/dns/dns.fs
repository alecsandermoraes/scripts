open System.Net 
open System.IO 
open System 

let main argv = 
    let mutable wordlist = None 
    let mutable domain = None 

    for i = 0 to argv.Length - 1 do 
        match argv.[i] with 
        | "-w" when i + 1 < argv.Length -> wordlist <- Some argv.[i + 1]
        | "-d" when i + 1 < argv.Length -> domain <- Some argv[i + 1]
        | _ -> ()
    
    match wordlist, domain with
    | Some wordlist, Some domain ->
        let resolver (subTarget: string) =
            try
                let addresses = Dns.GetHostAddresses(subTarget);
                addresses |> Array.iter (fun addr -> printfn "%s -> %s" subTarget addr.ToString())
            with 
            | :? System.Net.Sockets.SocketException -> () 

        use file = new StreamReader(wordlist)
        while not file.EndOfStream do 
            let subdomain = file.ReadLine()
            let subTarget = sprintf "%s.%s" subdomain domain 
            resolver subTarget
    | _ -> printfn "Forne√ßa os Argumentos Corretamente"
    
    0

[<EntryPoint>]
let main argv = main argv